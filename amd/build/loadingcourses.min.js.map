{"version":3,"file":"loadingcourses.min.js","sources":["../src/loadingcourses.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Provides the block_cgsfeedback/control module\n *\n * @package   block_cgsfeedback\n * @category  output\n * @copyright 2023 onwards Veronica Bermegui\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * @module block_cgsfeedback/loadingcourses\n */\ndefine(['core/url', 'core/ajax', 'core/log', 'core/templates'],\n    function (URL, Ajax, Log, Templates) {\n        'use strict';\n\n        /**\n         * Initializes the block controls.\n         */\n        function init(user) {\n            Log.debug('block_cgsfeedback/loadingcourses: initializing loadingcourses of the cgsfeedback block');\n            const instanceid = document.querySelector('.cgsfeedback-loading-courses').getAttribute('data-instanceid')\n            var section = document.getElementById(`inst${instanceid}`)\n\n            if (section == null) {\n                Log.debug('block_cgsfeedback/control: section not found!');\n                return;\n            }\n\n            const loadCourseNames = () => {\n                let user = document.querySelector('.cgsfeedback-loading-courses').getAttribute('data-user');\n                let instanceid = document.querySelector('[data-block=cgsfeedback]').getAttribute('id');\n\n                Ajax.call([{\n\n                    methodname: 'block_cgsfeedback_get_courses',\n                    args: {\n                        user: user\n                    },\n                    done: function (response) {\n                        let context = JSON.parse(response.ctx);\n                        context.instanceid = instanceid;\n                        // Remove the class that centres the spinner\n                        document.getElementById('cgsfeedback-loading-container').classList.remove('cgsfeedback-loading-courses-first');\n                        if (context.courses == null) {\n                            context.text = \"Assignments not found\"\n\n                            Templates.renderForPromise('block_cgsfeedback/no_content', context)\n                                .then(({ html, js }) => {\n                                    Templates.replaceNodeContents('#cgsfeedback-loading-container', html, js);\n                                })\n                                .catch((error) => displayException(error));\n                        } else {\n\n                            Templates.renderForPromise('block_cgsfeedback/content', context)\n                                .then(({html, js}) => {\n                                    Templates.replaceNodeContents('#cgsfeedback-loading-container', html, js);\n                                })\n                                .catch((error) => displayException(error));\n                        }\n\n\n                    },\n                    fail: function (reason) {\n                        console.log(reason);\n                    }\n                }\n                ])\n\n            }\n\n            // Load courses\n            loadCourseNames();\n\n        }\n\n        return {\n            init: init\n        };\n    });"],"names":["define","URL","Ajax","Log","Templates","init","user","debug","instanceid","document","querySelector","getAttribute","getElementById","call","methodname","args","done","response","context","JSON","parse","ctx","classList","remove","courses","text","renderForPromise","then","html","js","replaceNodeContents","catch","error","displayException","fail","reason","console","log","loadCourseNames"],"mappings":";;;;;;;;AA2BAA,0CAAO,CAAC,WAAY,YAAa,WAAY,mBACzC,SAAUC,IAAKC,KAAMC,IAAKC,iBA+Df,CACHC,cA1DUC,MACVH,IAAII,MAAM,8FACJC,WAAaC,SAASC,cAAc,gCAAgCC,aAAa,sBAGxE,MAFDF,SAASG,6BAAsBJ,eAOrB,eAChBF,KAAOG,SAASC,cAAc,gCAAgCC,aAAa,aAC3EH,WAAaC,SAASC,cAAc,4BAA4BC,aAAa,MAEjFT,KAAKW,KAAK,CAAC,CAEPC,WAAY,gCACZC,KAAM,CACFT,KAAMA,MAEVU,KAAM,SAAUC,cACRC,QAAUC,KAAKC,MAAMH,SAASI,KAClCH,QAAQV,WAAaA,WAErBC,SAASG,eAAe,iCAAiCU,UAAUC,OAAO,qCACnD,MAAnBL,QAAQM,SACRN,QAAQO,KAAO,wBAEfrB,UAAUsB,iBAAiB,+BAAgCR,SACtDS,MAAK,mBAAGC,UAAAA,KAAMC,QAAAA,GACXzB,UAAU0B,oBAAoB,iCAAkCF,KAAMC,OAEzEE,OAAM,SAACC,cAAUC,iBAAiBD,WAGvC5B,UAAUsB,iBAAiB,4BAA6BR,SACnDS,MAAK,oBAAEC,WAAAA,KAAMC,SAAAA,GACVzB,UAAU0B,oBAAoB,iCAAkCF,KAAMC,OAEzEE,OAAM,SAACC,cAAUC,iBAAiBD,WAK/CE,KAAM,SAAUC,QACZC,QAAQC,IAAIF,YAQxBG,QA/CInC,IAAII,MAAM"}