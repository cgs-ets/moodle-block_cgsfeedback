{"version":3,"file":"control.min.js","sources":["../src/control.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Provides the block_cgsfeedback/control module\n *\n * @package   block_cgsfeedback\n * @category  output\n * @copyright 2023 onwards Veronica Bermegui\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * @module block_cgsfeedback/control\n */\ndefine(['core/ajax', 'core/log'],\n    function (Ajax, Log) {\n        'use strict';\n\n        /**\n         * Initializes the block controls.\n         */\n        function init(instanceid) {\n            Log.debug('block_cgsfeedback/control: initializing controls of the cgsfeedback block');\n            console.log(instanceid);\n            var section = document.getElementById(instanceid)\n\n            if (section == null) {\n                Log.debug('block_cgsfeedback/control: section not found!');\n                return;\n            }\n\n            // Add the expand functionality\n            document.querySelectorAll('.expansible-container').forEach(el => el.addEventListener('click', expandTable));\n\n\n            // Show table\n            function expandTable(e) {\n                const courseid = e.target.getAttribute('data-courseid');\n                console.log(courseid);\n                userid = document.querySelector(\".cgsfeedback-course-container\").getAttribute('data-userid');\n                const table = document.getElementById(`cgsfeedback-activities-container-${courseid}`);\n\n                if (table == null) {\n                    // Show the loading\n\n                    if (document.querySelector(`.loading-course-${courseid}-modules`) != null) {\n                        document.querySelector(`.loading-course-${courseid}-modules`).removeAttribute('hidden');\n                    }\n\n                    // Get the assessments dinamically.\n                    Ajax.call([\n                        {\n                            methodname: 'block_cgsfeedback_get_modules',\n                            args: {\n                                courseid: courseid,\n                                userid: userid,\n                            },\n                            done: function (response) {\n                                console.log(courseid);\n                                $(`.loading-course-${courseid}-modules`).replaceWith(response.html);\n                            },\n                            fail: function (reason) {\n                                console.log(reason);\n                            }\n                        }\n                    ])\n                } else {\n                    document.getElementById(`cgsfeedback-activities-container-${courseid}`).removeAttribute('hidden');\n                }\n\n                // Hide expand icon\n                document.querySelector(`.cgsfeedback-expand-icon[data-courseid=\"${courseid}\"]`).setAttribute('hidden', true);\n                // Show collapse icon\n                document.querySelector(`.cgsfeedback-collapse-icon[data-courseid=\"${courseid}\"]`).removeAttribute('hidden');\n                // remove the expansible-container class to the header\n                document.querySelector(`.cgsfeedback-container-${courseid}`).classList.remove('expansible-container');\n                // add the collapsible-container and event listeners\n                document.querySelector(`.cgsfeedback-container-${courseid}`).classList.add('collapsible-container');\n\n                document.querySelectorAll(`.cgsfeedback-container-${courseid}.collapsible-container`).forEach(el => el.addEventListener('click', collapseTable));\n            }\n\n\n            // Hide table\n            function collapseTable(e) {\n                courseid = e.target.getAttribute('data-courseid');\n                const table = document.getElementById(`cgsfeedback-activities-container-${courseid}`);\n                table.setAttribute('hidden', true); // Hide table\n                document.querySelector(`.cgsfeedback-collapse-icon[data-courseid=\"${courseid}\"]`).setAttribute('hidden', true);\n                // Show collapse icon\n                document.querySelector(`.cgsfeedback-expand-icon[data-courseid=\"${courseid}\"]`).removeAttribute('hidden');\n\n                // remove the collapsible-container class to the header\n                document.querySelectorAll(`.cgsfeedback-container-${courseid}.collapsible-container`).forEach(el => el.removeEventListener('click', collapseTable));\n                document.querySelector(`.cgsfeedback-container-${courseid}`).classList.remove('collapsible-container');\n                // add the expansible-container and event listeners\n                document.querySelector(`.cgsfeedback-container-${courseid}`).classList.add('expansible-container');\n\n                document.querySelectorAll(`.cgsfeedback-container-${courseid}.expansible-container`).forEach(el => el.addEventListener('click', expandTable));\n            }\n\n        }\n\n        return {\n            init: init\n        };\n    });"],"names":["define","Ajax","Log","init","instanceid","expandTable","e","courseid","target","getAttribute","console","log","userid","document","querySelector","getElementById","removeAttribute","call","methodname","args","done","response","$","replaceWith","html","fail","reason","setAttribute","classList","remove","add","querySelectorAll","forEach","el","addEventListener","collapseTable","removeEventListener","debug"],"mappings":";;;;;;;;AA2BAA,mCAAO,CAAC,YAAa,aACjB,SAAUC,KAAMC,WAwFL,CACHC,cAnFUC,qBAeDC,YAAYC,OACXC,SAAWD,EAAEE,OAAOC,aAAa,iBACvCC,QAAQC,IAAIJ,UACZK,OAASC,SAASC,cAAc,iCAAiCL,aAAa,eAGjE,MAFCI,SAASE,0DAAmDR,YAKD,MAAjEM,SAASC,wCAAiCP,uBAC1CM,SAASC,wCAAiCP,sBAAoBS,gBAAgB,UAIlFf,KAAKgB,KAAK,CACN,CACIC,WAAY,gCACZC,KAAM,CACFZ,SAAUA,SACVK,OAAQA,QAEZQ,KAAM,SAAUC,UACZX,QAAQC,IAAIJ,UACZe,4BAAqBf,sBAAoBgB,YAAYF,SAASG,OAElEC,KAAM,SAAUC,QACZhB,QAAQC,IAAIe,aAKxBb,SAASE,0DAAmDR,WAAYS,gBAAgB,UAI5FH,SAASC,gEAAyDP,gBAAcoB,aAAa,UAAU,GAEvGd,SAASC,kEAA2DP,gBAAcS,gBAAgB,UAElGH,SAASC,+CAAwCP,WAAYqB,UAAUC,OAAO,wBAE9EhB,SAASC,+CAAwCP,WAAYqB,UAAUE,IAAI,yBAE3EjB,SAASkB,kDAA2CxB,oCAAkCyB,SAAQ,SAAAC,WAAMA,GAAGC,iBAAiB,QAASC,2BAK5HA,cAAc7B,GACnBC,SAAWD,EAAEE,OAAOC,aAAa,iBACnBI,SAASE,0DAAmDR,WACpEoB,aAAa,UAAU,GAC7Bd,SAASC,kEAA2DP,gBAAcoB,aAAa,UAAU,GAEzGd,SAASC,gEAAyDP,gBAAcS,gBAAgB,UAGhGH,SAASkB,kDAA2CxB,oCAAkCyB,SAAQ,SAAAC,WAAMA,GAAGG,oBAAoB,QAASD,kBACpItB,SAASC,+CAAwCP,WAAYqB,UAAUC,OAAO,yBAE9EhB,SAASC,+CAAwCP,WAAYqB,UAAUE,IAAI,wBAE3EjB,SAASkB,kDAA2CxB,mCAAiCyB,SAAQ,SAAAC,WAAMA,GAAGC,iBAAiB,QAAS7B,gBA5EpIH,IAAImC,MAAM,6EACV3B,QAAQC,IAAIP,YAGG,MAFDS,SAASE,eAAeX,YAQtCS,SAASkB,iBAAiB,yBAAyBC,SAAQ,SAAAC,WAAMA,GAAGC,iBAAiB,QAAS7B,gBAL1FH,IAAImC,MAAM"}